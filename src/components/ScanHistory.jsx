import { useEffect, useState } from "react";
import { getScanHistory } from "./utils/axiosInstance";

const ScanHistory = () => {
    const [isLoading, setIsLoading] = useState(true);
    const [userScanData, setData] = useState({ results: [] });

    const getData = async () => {
        const scanData = await getScanHistory(localStorage.getItem('user-id'));
        setData(scanData.data);
        console.log(scanData.data);
        setIsLoading(false);
    }
    useEffect(() => {
        getData();
        // setTimeout(() => {
        //     setData([
        //         {
        //             name: "superfile.txt",
        //             errorCount: 10,
        //             isValid: false
        //         },
        //         {
        //             name: "successfile.txt",
        //             errorCount: 10,
        //             isValid: true
        //         }
        //     ]);
        //     setIsLoading(false);
        // }, 2000)
    }, [])
    return <>
        {isLoading
            ? <div className="spinner-border" role="status">
                <span className="sr-only"></span>
            </div>
            : <table className="table table-striped table-dark table-hover">
                <thead>
                    <tr>
                        <th scope="col">File Name</th>
                        <th scope="col">Error Line</th>
                        <th scope="col">Error Description</th>
                        <th scope="col">Scanned Time</th>
                    </tr>
                </thead>
                <tbody>
                    {userScanData.results.map((scanRecord) => {
                        return <>
                            <tr>
                                <td rowSpan={scanRecord.scanResult.length + 1}>{scanRecord.fileName}</td>
                            </tr>
                            {
                                scanRecord.scanResult.map((row, i) => {
                                    return <tr>
                                        <td>{row['Error line']}</td>
                                        <td>{row['Error Description']}</td>
                                        <td>{scanRecord.createdAt}</td>
                                    </tr>
                                })
                            }
                        </>
                    })
                    }
                </tbody>
            </table>}
    </>
}

export default ScanHistory;